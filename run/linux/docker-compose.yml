version: "3.2"
#
# Spin up an instance of the Model FHIR Proxy
#
# cd run
# docker-compose up
# (docker-compose up -d)
#
# OR via npm
#
# cd /
# npm run proxy:up
# (npm run proxy:up:detached)
#
services:

  localdb:
    image: postgres
    container_name: localdb
    restart: always
    environment: 
      - POSTGRES_DB=fhirstore
      - POSTGRES_USER=iamonfhir
    env_file:
      - db.env
    volumes:
      - ../db/schema/init.txt:/docker-entrypoint-initdb.d/init.sql
    ports:
      - 5432:5432
    networks:
      - internal

  localdb-client:
    image: dpage/pgadmin4
    container_name: localdb-client
    env_file:
        - dbclient.env
    ports:
      - 54321:80
    depends_on:
      - localdb
    networks:
      - internal

  proxy:
    image: synaneticsltd/synfhir-store:linux-latest
    restart: always
    environment: 
      - NAMESPACE=synfhir-store
      - METRICSENABLE=false
      - PORT=3000
      - SERVICEDIR=services
    env_file:
       - ../proxy.env
    depends_on: 
      - localdb
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.proxy.rule=PathPrefix(`/fhir`)"
      - "traefik.http.services.proxy.loadbalancer.server.port=3000"
      - "traefik.http.routers.proxy.entrypoints=secure"
      - "traefik.http.routers.proxy.tls=true"
      - "traefik.http.routers.proxy.tls.domains[0].main=${SSL_CERTIFICATE_CN}"
    networks:
      - internal

  proxy-ssl:
    image: traefik:v2.2
    ports:
      - 443:443
      - 80:80
      - 8080:8080
    depends_on: 
      - proxy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ../../ssl/certs/:/etc/traefik/certs
      - ../../ssl/config/linux/traefik.toml:/etc/traefik/traefik.toml
      - ../../ssl/config/dynamic_conf.toml:/etc/traefik/dynamic_conf.toml
    networks:
      - internal
      - default

networks:
  internal:
  
    
